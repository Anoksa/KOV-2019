Microsoft (R) Macro Assembler Version 14.16.27024.1	    12/26/19 22:24:11
..\..\KOV-2019v5\KOV-2019v5\Out.asm			     Page 1 - 1


				.586
					.model flat, stdcall
					includelib libucrt.lib
					includelib kernel32.lib
					includelib ../Debug/Library.lib
					ExitProcess PROTO :DWORD

				EXTRN Random: proc
					EXTRN Strlen: proc
					EXTRN Line: proc
					EXTRN OutInt: proc
					EXTRN Strcmp: proc
					EXTRN OutStr: proc

				.stack 4096


 00000000			.const
 00000000 45 52 52 4F 52		divisionByZero db 'ERROR: DIVIDE BY ZERO', 0
	   3A 20 44 49 56
	   49 44 45 20 42
	   59 20 5A 45 52
	   4F 00
 00000016 45 52 52 4F 52		belowZeroNum db 'ERROR: NUM IS BELOVER THAN ZERO', 0
	   3A 20 4E 55 4D
	   20 49 53 20 42
	   45 4C 4F 56 45
	   52 20 54 48 41
	   4E 20 5A 45 52
	   4F 00
 00000036 00000002			L1 SDWORD 2
 0000003A 00000000			L2 SDWORD 0
 0000003E 00000001			L3 SDWORD 1
 00000042 00000000			L4 SDWORD 0
 00000046 6D 79 20 66 69		L5 BYTE "my first kursach", 0
	   72 73 74 20 6B
	   75 72 73 61 63
	   68 00
 00000057 6D 79 20 46 69		L6 BYTE "my First kursach", 0
	   72 73 74 20 6B
	   75 72 73 61 63
	   68 00
 00000068 68 65 6C 70 00		L7 BYTE "help", 0
 0000006D 00000003			L8 SDWORD 3
 00000071 65 76 65 6E 00		L9 BYTE "even", 0
 00000076 6F 64 64 00			L10 BYTE "odd", 0
 0000007A 00000024			L11 SDWORD 36
 0000007E 00000059			L12 SDWORD 89
 00000082 57 6F 72 6B 73		L13 BYTE "Works", 0
	   00
 00000088 4E 6F 74 20 77		L14 BYTE "Not works", 0
	   6F 72 6B 73 00

 00000000			.data
 00000000 00000000			mathresult SDWORD 0
 00000004 00000000			fcheckboo SDWORD 0
 00000008 00000000			fcheckres SDWORD 0
 0000000C 00000000			gof SDWORD 0
 00000010 00000000			golen DWORD ?
 00000014 00000000			gocmp DWORD ?
 00000018 00000000			goboo SDWORD 0
 0000001C 00000000			goeo SDWORD 0
 00000020 00000000			gox SDWORD 0
 00000024 00000000			gooe SDWORD 0

 00000000			.code

 00000000			math PROC mathone : DWORD, mathtwo : DWORD
 00000003  FF 75 08			push mathone
 00000006  FF 75 0C			push mathtwo
 00000009  58				pop eax
 0000000A  5B				pop ebx
 0000000B  03 C3			add eax, ebx
 0000000D  50				push eax
 0000000E  FF 75 0C			push mathtwo
 00000011  58				pop eax
 00000012  5B				pop ebx
 00000013  F7 E3			mul ebx
 00000015  50				push eax
 00000016  8F 05 00000000 R		pop mathresult
 0000001C  FF 35 00000000 R		push mathresult
 00000022  EB 00			jmp local0
 00000024			local0:
 00000024  58				pop eax
					ret
 00000029			math ENDP

 00000029			fcheck PROC fchecknumb : DWORD
 0000002C  FF 75 08			push fchecknumb
 0000002F  FF 35 00000036 R		push L1
 00000035  5B				pop ebx
 00000036  BA 00000000			mov edx, 0 
 0000003B  58				pop eax
 0000003C  F7 FB			idiv ebx
 0000003E  52				push edx
 0000003F  8B C2			mov eax, edx
 00000041  8F 05 00000008 R		pop fcheckres
 00000047  A1 00000008 R		mov eax, fcheckres
 0000004C  3B 05 0000003A R		cmp eax, L2
 00000052  74 04			jz m0
 00000054  75 10			jnz m1
 00000056  74 0E			je m1
 00000058			m0:
 00000058  FF 35 0000003E R		push L3
 0000005E  8F 05 00000004 R		pop fcheckboo
 00000064  EB 0C			jmp e0
 00000066			m1:
 00000066  FF 35 00000042 R		push L4
 0000006C  8F 05 00000004 R		pop fcheckboo
 00000072			e0:
 00000072  FF 35 00000004 R		push fcheckboo
 00000078  EB 00			jmp local1
 0000007A			local1:
 0000007A  58				pop eax
					ret
 0000007F			fcheck ENDP

 0000007F			main PROC
 0000007F  68 00000000 R		push math
 00000084  FF 35 00000036 R		push L1
 0000008A  FF 35 00000036 R		push L1
 00000090  5A				pop edx
 00000091  5A				pop edx
 00000092  FF 35 00000036 R		push L1
 00000098  FF 35 00000036 R		push L1
 0000009E  E8 00000000 E		call Strcmp; не понимаю зачем ты вылезло
 000000A3  50				push eax
 000000A4  8F 05 0000000C R		pop gof
 000000AA  FF 35 0000000C R		push gof
 000000B0  E8 00000000 E		call OutInt
 000000B5  E8 00000000 E		call Line
 000000BA  68 00000046 R		push offset L5
 000000BF  8F 05 00000010 R		pop golen
 000000C5  68 00000057 R		push offset L6
 000000CA  8F 05 00000014 R		pop gocmp
 000000D0  FF 35 0000003E R		push L3
 000000D6  8F 05 00000018 R		pop goboo
 000000DC  A1 00000018 R		mov eax, goboo
 000000E1  83 F8 01			cmp eax, 1
 000000E4  74 04			jz m2
 000000E6  75 14			jnz m3
 000000E8  74 12			je m3
 000000EA			m2:
 000000EA  FF 35 00000010 R		push golen
 000000F0  E8 00000000 E		call OutStr
 000000F5  E8 00000000 E		call Line
 000000FA  EB 0F			jmp e1
 000000FC			m3:
 000000FC  68 00000068 R		push offset L7
 00000101  E8 00000000 E		call OutStr
 00000106  E8 00000000 E		call Line
 0000010B			e1:
 0000010B  68 00000029 R		push fcheck
 00000110  FF 35 0000006D R		push L8
 00000116  5A				pop edx
 00000117  FF 35 0000006D R		push L8
 0000011D  E8 00000000 E		call Strcmp; не понимаю зачем ты вылезло
 00000122  50				push eax
 00000123  8F 05 0000001C R		pop goeo
 00000129  A1 0000001C R		mov eax, goeo
 0000012E  83 F8 01			cmp eax, 1
 00000131  74 04			jz m4
 00000133  75 13			jnz m5
 00000135  74 11			je m5
 00000137			m4:
 00000137  68 00000071 R		push offset L9
 0000013C  E8 00000000 E		call OutStr
 00000141  E8 00000000 E		call Line
 00000146  EB 0F			jmp e2
 00000148			m5:
 00000148  68 00000076 R		push offset L10
 0000014D  E8 00000000 E		call OutStr
 00000152  E8 00000000 E		call Line
 00000157			e2:
 00000157  FF 35 0000007A R		push L11
 0000015D  8F 05 00000020 R		pop gox
 00000163  FF 35 00000010 R		push golen
 00000169  FF 35 00000014 R		push gocmp
 0000016F  5A				pop edx
 00000170  5A				pop edx
 00000171  FF 35 00000014 R		push gocmp
 00000177  FF 35 00000010 R		push golen
 0000017D  E8 00000000 E		call Strcmp; не понимаю зачем ты вылезло
 00000182  50				push eax
 00000183  8F 05 00000024 R		pop gooe
 00000189  A1 00000020 R		mov eax, gox
 0000018E  3B 05 0000007E R		cmp eax, L12
 00000194  7C 04			jl m6
 00000196  7F 13			jg m7
 00000198  74 11			je m7
 0000019A			m6:
 0000019A  68 00000082 R		push offset L13
 0000019F  E8 00000000 E		call OutStr
 000001A4  E8 00000000 E		call Line
 000001A9  EB 0F			jmp e3
 000001AB			m7:
 000001AB  68 00000088 R		push offset L14
 000001B0  E8 00000000 E		call OutStr
 000001B5  E8 00000000 E		call Line
 000001BA			e3:
 000001BA				finish:
 000001BA  68 00000000 R		push offset divisionByZero
 000001BF			main ENDP
				end main
Microsoft (R) Macro Assembler Version 14.16.27024.1	    12/26/19 22:24:11
..\..\KOV-2019v5\KOV-2019v5\Out.asm			     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

CONST  . . . . . . . . . . . . .	32 Bit	 00000092 Para	  Public  'CONST'	 ReadOnly
FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000028 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000001BF Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
fcheck . . . . . . . . . . . . .	P Near	 00000029 _TEXT	Length= 00000056 Public STDCALL
  fchecknumb . . . . . . . . . .	DWord	 bp + 00000008
  m0 . . . . . . . . . . . . . .	L Near	 00000058 _TEXT	
  m1 . . . . . . . . . . . . . .	L Near	 00000066 _TEXT	
  e0 . . . . . . . . . . . . . .	L Near	 00000072 _TEXT	
  local1 . . . . . . . . . . . .	L Near	 0000007A _TEXT	
main . . . . . . . . . . . . . .	P Near	 0000007F _TEXT	Length= 00000140 Public STDCALL
  m2 . . . . . . . . . . . . . .	L Near	 000000EA _TEXT	
  m3 . . . . . . . . . . . . . .	L Near	 000000FC _TEXT	
  e1 . . . . . . . . . . . . . .	L Near	 0000010B _TEXT	
  m4 . . . . . . . . . . . . . .	L Near	 00000137 _TEXT	
  m5 . . . . . . . . . . . . . .	L Near	 00000148 _TEXT	
  e2 . . . . . . . . . . . . . .	L Near	 00000157 _TEXT	
  m6 . . . . . . . . . . . . . .	L Near	 0000019A _TEXT	
  m7 . . . . . . . . . . . . . .	L Near	 000001AB _TEXT	
  e3 . . . . . . . . . . . . . .	L Near	 000001BA _TEXT	
  finish . . . . . . . . . . . .	L Near	 000001BA _TEXT	
math . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000029 Public STDCALL
  mathone  . . . . . . . . . . .	DWord	 bp + 00000008
  mathtwo  . . . . . . . . . . .	DWord	 bp + 0000000C
  local0 . . . . . . . . . . . .	L Near	 00000024 _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
L10  . . . . . . . . . . . . . .	Byte	 00000076 CONST	
L11  . . . . . . . . . . . . . .	DWord	 0000007A CONST	
L12  . . . . . . . . . . . . . .	DWord	 0000007E CONST	
L13  . . . . . . . . . . . . . .	Byte	 00000082 CONST	
L14  . . . . . . . . . . . . . .	Byte	 00000088 CONST	
L1 . . . . . . . . . . . . . . .	DWord	 00000036 CONST	
L2 . . . . . . . . . . . . . . .	DWord	 0000003A CONST	
L3 . . . . . . . . . . . . . . .	DWord	 0000003E CONST	
L4 . . . . . . . . . . . . . . .	DWord	 00000042 CONST	
L5 . . . . . . . . . . . . . . .	Byte	 00000046 CONST	
L6 . . . . . . . . . . . . . . .	Byte	 00000057 CONST	
L7 . . . . . . . . . . . . . . .	Byte	 00000068 CONST	
L8 . . . . . . . . . . . . . . .	DWord	 0000006D CONST	
L9 . . . . . . . . . . . . . . .	Byte	 00000071 CONST	
Line . . . . . . . . . . . . . .	L Near	 00000000 FLAT	External STDCALL
OutInt . . . . . . . . . . . . .	L Near	 00000000 FLAT	External STDCALL
OutStr . . . . . . . . . . . . .	L Near	 00000000 FLAT	External STDCALL
Random . . . . . . . . . . . . .	L Near	 00000000 FLAT	External STDCALL
Strcmp . . . . . . . . . . . . .	L Near	 00000000 FLAT	External STDCALL
Strlen . . . . . . . . . . . . .	L Near	 00000000 FLAT	External STDCALL
belowZeroNum . . . . . . . . . .	Byte	 00000016 CONST	
divisionByZero . . . . . . . . .	Byte	 00000000 CONST	
fcheckboo  . . . . . . . . . . .	DWord	 00000004 _DATA	
fcheckres  . . . . . . . . . . .	DWord	 00000008 _DATA	
goboo  . . . . . . . . . . . . .	DWord	 00000018 _DATA	
gocmp  . . . . . . . . . . . . .	DWord	 00000014 _DATA	
goeo . . . . . . . . . . . . . .	DWord	 0000001C _DATA	
gof  . . . . . . . . . . . . . .	DWord	 0000000C _DATA	
golen  . . . . . . . . . . . . .	DWord	 00000010 _DATA	
gooe . . . . . . . . . . . . . .	DWord	 00000024 _DATA	
gox  . . . . . . . . . . . . . .	DWord	 00000020 _DATA	
mathresult . . . . . . . . . . .	DWord	 00000000 _DATA	

	   0 Warnings
	   0 Errors
