Microsoft (R) Macro Assembler Version 14.16.27024.1	    12/29/19 20:41:29
..\..\KOV-2019v5\KOV-2019v5\Out.asm			     Page 1 - 1


				.586
					.model flat, stdcall
					includelib libucrt.lib
					includelib kernel32.lib
					includelib ../Debug/Library.lib
					ExitProcess PROTO :DWORD

				EXTRN Random: proc
					EXTRN Strlen: proc
					EXTRN Line: proc
					EXTRN OutInt: proc
					EXTRN Strcmp: proc
					EXTRN OutStr: proc

				.stack 4096


 00000000			.const
 00000000 45 52 52 4F 52		divisionByZero db 'ERROR: DIVIDE BY ZERO', 0
	   3A 20 44 49 56
	   49 44 45 20 42
	   59 20 5A 45 52
	   4F 00
 00000016 45 52 52 4F 52		belowZeroNum db 'ERROR: NUM IS BELOVER THAN ZERO', 0
	   3A 20 4E 55 4D
	   20 49 53 20 42
	   45 4C 4F 56 45
	   52 20 54 48 41
	   4E 20 5A 45 52
	   4F 00
 00000036 48 65 6C 6C 6F		L1 BYTE "Hello", 0
	   00
 0000003C 00000000			L2 SDWORD 0
 00000040 00000002			L3 SDWORD 2
 00000044 6D 79 20 66 69		L4 BYTE "my first kursach", 0
	   72 73 74 20 6B
	   75 72 73 61 63
	   68 00
 00000055 6D 79 20 46 69		L5 BYTE "my First kursach", 0
	   72 73 74 20 6B
	   75 72 73 61 63
	   68 00
 00000066 00000024			L6 SDWORD 36
 0000006A 0000001C			L7 SDWORD 28
 0000006E 57 6F 72 6B 73		L8 BYTE "Works", 0
	   00
 00000074 4E 6F 74 20 77		L9 BYTE "Not works", 0
	   6F 72 6B 73 00

 00000000			.data
 00000000 00000000			mathr DWORD ?
 00000004 00000000			mathsr SDWORD 0
 00000008 00000000			mathresult SDWORD 0
 0000000C 00000000			gol SDWORD 0
 00000010 00000000			gos SDWORD 0
 00000014 00000000			gof SDWORD 0
 00000018 00000000			golen DWORD ?
 0000001C 00000000			gocmp DWORD ?
 00000020 00000000			gox SDWORD 0
 00000024 00000000			gorc SDWORD 0

 00000000			.code

 00000000			math PROC mathone : DWORD, mathtwo : DWORD
 00000003  68 00000036 R		push offset L1
 00000008  8F 05 00000000 R		pop mathr
 0000000E  FF 75 08			push mathone
 00000011  5A				pop edx
 00000012  FF 75 08			push mathone
 00000015  E8 00000000 E		call Strlen;
 0000001A  50				push eax
 0000001B  8F 05 00000004 R		pop mathsr
 00000021  FF 75 08			push mathone
 00000024  FF 75 0C			push mathtwo
 00000027  58				pop eax
 00000028  5B				pop ebx
 00000029  03 C3			add eax, ebx
 0000002B  50				push eax
 0000002C  FF 75 0C			push mathtwo
 0000002F  58				pop eax
 00000030  5B				pop ebx
 00000031  F7 E3			mul ebx
 00000033  50				push eax
 00000034  FF 35 00000004 R		push mathsr
 0000003A  58				pop eax
 0000003B  5B				pop ebx
 0000003C  03 C3			add eax, ebx
 0000003E  50				push eax
 0000003F  8F 05 00000008 R		pop mathresult
 00000045  FF 35 00000008 R		push mathresult
 0000004B  E8 00000000 E		call OutInt
 00000050  E8 00000000 E		call Line
 00000055  FF 35 00000008 R		push mathresult
 0000005B  EB 00			jmp local0
 0000005D			local0:
 0000005D  58				pop eax
					ret
 00000062			math ENDP

 00000062			main PROC
 00000062  FF 35 0000003C R		push L2
 00000068  8F 05 0000000C R		pop gol
 0000006E  FF 35 0000003C R		push L2
 00000074  8F 05 00000010 R		pop gos
 0000007A  68 00000000 R		push math
 0000007F  FF 35 00000040 R		push L3
 00000085  FF 35 00000040 R		push L3
 0000008B  5A				pop edx
 0000008C  5A				pop edx
 0000008D  FF 35 00000040 R		push L3
 00000093  FF 35 00000040 R		push L3
 00000099  E8 FFFFFF62			call math
 0000009E  50				push eax
 0000009F  8F 05 00000014 R		pop gof
 000000A5  68 00000044 R		push offset L4
 000000AA  8F 05 00000018 R		pop golen
 000000B0  68 00000055 R		push offset L5
 000000B5  8F 05 0000001C R		pop gocmp
 000000BB  FF 35 00000066 R		push L6
 000000C1  8F 05 00000020 R		pop gox
 000000C7  FF 35 00000018 R		push golen
 000000CD  FF 35 0000001C R		push gocmp
 000000D3  5A				pop edx
 000000D4  5A				pop edx
 000000D5  FF 35 0000001C R		push gocmp
 000000DB  FF 35 00000018 R		push golen
 000000E1  E8 00000000 E		call Strcmp; 
 000000E6  50				push eax
 000000E7  8F 05 00000024 R		pop gorc
 000000ED  A1 0000000C R		mov eax, gol
 000000F2  3B 05 0000006A R		cmp eax, L7
 000000F8  7E 04			jle m0
 000000FA  7D 13			jge m1
 000000FC  74 11			je m1
 000000FE			m0:
 000000FE  68 0000006E R		push offset L8
 00000103  E8 00000000 E		call OutStr
 00000108  E8 00000000 E		call Line
 0000010D  EB 0F			jmp e0
 0000010F			m1:
 0000010F  68 00000074 R		push offset L9
 00000114  E8 00000000 E		call OutStr
 00000119  E8 00000000 E		call Line
 0000011E			e0:
 0000011E				finish:
 0000011E  68 00000000 R		push offset divisionByZero
 00000123  E8 00000000 E		call ExitProcess
 00000128			main ENDP
				end main
Microsoft (R) Macro Assembler Version 14.16.27024.1	    12/29/19 20:41:29
..\..\KOV-2019v5\KOV-2019v5\Out.asm			     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

CONST  . . . . . . . . . . . . .	32 Bit	 0000007E Para	  Public  'CONST'	 ReadOnly
FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000028 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000128 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000062 _TEXT	Length= 000000C6 Public STDCALL
  m0 . . . . . . . . . . . . . .	L Near	 000000FE _TEXT	
  m1 . . . . . . . . . . . . . .	L Near	 0000010F _TEXT	
  e0 . . . . . . . . . . . . . .	L Near	 0000011E _TEXT	
  finish . . . . . . . . . . . .	L Near	 0000011E _TEXT	
math . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000062 Public STDCALL
  mathone  . . . . . . . . . . .	DWord	 bp + 00000008
  mathtwo  . . . . . . . . . . .	DWord	 bp + 0000000C
  local0 . . . . . . . . . . . .	L Near	 0000005D _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
L1 . . . . . . . . . . . . . . .	Byte	 00000036 CONST	
L2 . . . . . . . . . . . . . . .	DWord	 0000003C CONST	
L3 . . . . . . . . . . . . . . .	DWord	 00000040 CONST	
L4 . . . . . . . . . . . . . . .	Byte	 00000044 CONST	
L5 . . . . . . . . . . . . . . .	Byte	 00000055 CONST	
L6 . . . . . . . . . . . . . . .	DWord	 00000066 CONST	
L7 . . . . . . . . . . . . . . .	DWord	 0000006A CONST	
L8 . . . . . . . . . . . . . . .	Byte	 0000006E CONST	
L9 . . . . . . . . . . . . . . .	Byte	 00000074 CONST	
Line . . . . . . . . . . . . . .	L Near	 00000000 FLAT	External STDCALL
OutInt . . . . . . . . . . . . .	L Near	 00000000 FLAT	External STDCALL
OutStr . . . . . . . . . . . . .	L Near	 00000000 FLAT	External STDCALL
Random . . . . . . . . . . . . .	L Near	 00000000 FLAT	External STDCALL
Strcmp . . . . . . . . . . . . .	L Near	 00000000 FLAT	External STDCALL
Strlen . . . . . . . . . . . . .	L Near	 00000000 FLAT	External STDCALL
belowZeroNum . . . . . . . . . .	Byte	 00000016 CONST	
divisionByZero . . . . . . . . .	Byte	 00000000 CONST	
gocmp  . . . . . . . . . . . . .	DWord	 0000001C _DATA	
gof  . . . . . . . . . . . . . .	DWord	 00000014 _DATA	
golen  . . . . . . . . . . . . .	DWord	 00000018 _DATA	
gol  . . . . . . . . . . . . . .	DWord	 0000000C _DATA	
gorc . . . . . . . . . . . . . .	DWord	 00000024 _DATA	
gos  . . . . . . . . . . . . . .	DWord	 00000010 _DATA	
gox  . . . . . . . . . . . . . .	DWord	 00000020 _DATA	
mathresult . . . . . . . . . . .	DWord	 00000008 _DATA	
mathr  . . . . . . . . . . . . .	DWord	 00000000 _DATA	
mathsr . . . . . . . . . . . . .	DWord	 00000004 _DATA	

	   0 Warnings
	   0 Errors
